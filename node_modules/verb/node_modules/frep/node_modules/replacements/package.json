{
  "name": "replacements",
  "description": "Run multiple regex or string find-and-replace transformations on a string in sequence, reducing the final string to the accumulated result of all transformations.",
  "version": "0.1.3",
  "homepage": "https://github.com/jonschlinkert/replacements",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jonschlinkert/replacements.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/replacements/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/replacements/blob/master/LICENSE-MIT"
    }
  ],
  "keywords": [
    "escape",
    "expression",
    "expressions",
    "find",
    "format",
    "locate",
    "match",
    "matches",
    "modify",
    "pattern",
    "patterns",
    "re",
    "regex",
    "regexp",
    "regular",
    "replace",
    "replaced",
    "replacement",
    "replacements",
    "search",
    "sluggifier",
    "slugification",
    "slugified",
    "slugify",
    "string",
    "strings",
    "structure",
    "substitute",
    "template",
    "templates",
    "tranformation",
    "transform",
    "un-escape",
    "unescape",
    "url",
    "util",
    "utils",
    "utility"
  ],
  "main": "index.js",
  "engines": {
    "node": ">=0.10.0"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "devDependencies": {
    "verb": "~0.2.6",
    "chai": "~1.9.1",
    "mocha": "*"
  },
  "readme": "# replacements [![NPM version](https://badge.fury.io/js/replacements.png)](http://badge.fury.io/js/replacements)\n\n> Run multiple regex or string find-and-replace transformations on a string in sequence, reducing the final string to the accumulated result of all transformations.\n\n## Install\n#### [npm](npmjs.org)\n\n```bash\nnpm i replacements --save\n```\n\n## Usage\n\n```js\nvar replace = require('replacements');\n```\n\n### object of replacement patterns\n\n```js\nvar transformers = {\n  pattern: /a/g,\n  replacement: 'bbb'\n};\nconsole.log(replace('aaa', transformers));\n//=> 'bbbbbbbbb'\n```\n\n### key-value replacement patterns\n\nFor basic string transformations, you can pass the string to replace as the key, and the replacement as a value:\n\n```js\nvar transformers = {\n  'a': 'b'\n  'c': 'd'\n};\nconsole.log(replace('aaabbbccc', transformers));\n//=> 'bbbbbbddd'\n```\n\n_Note that only the first matching string will only be replaced using this format. If you need more flexibility, use the pattern-replacement regex syntax._.\n\n### array of replacement patterns\n\n```js\nvar transformers = [\n  {pattern: /a/g, replacement: 'bbb'},\n  {pattern: /b/g, replacement: 'ccc'},\n  {pattern: /c/g, replacement: 'ddd'},\n  {pattern: /d/g, replacement: 'eee'},\n  {pattern: /[e]+/g, replacement: '_DONE_'}\n];\nconsole.log(replace('aaa', transformers));\n//=> '__DONE__'\n```\n\n### functions as replacements\n\n```js\nvar transformers = {\n  pattern: /a+/g,\n  replacement: function(match) {\n    return match.split('').map(function(str, i) {\n      if (i === 0) {return 'b'; }\n      if (i === 1) {return str.toUpperCase();}\n      return str;\n    }).join('');\n  }\n};\nconsole.log(replace('aaa', transformers));\n//=> 'bAa'\n```\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014 Jon Schlinkert, contributors.  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on July 05, 2014._",
  "readmeFilename": "README.md",
  "_id": "replacements@0.1.3",
  "dist": {
    "shasum": "801c231c69b33468ae72c6e9b0623d564281d725"
  },
  "_from": "replacements@^0.1.1",
  "_resolved": "https://registry.npmjs.org/replacements/-/replacements-0.1.3.tgz"
}
