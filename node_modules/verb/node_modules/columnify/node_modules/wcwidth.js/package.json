{
  "name": "wcwidth.js",
  "version": "0.0.4",
  "description": "A JavaScript porting of C's wcwidth() and wcswidth()",
  "author": {
    "name": "Woong Jun",
    "email": "woong.jun@gmail.com",
    "url": "http://code.woong.org/"
  },
  "contributors": [],
  "homepage": "http://code.woong.org/wcwidth.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/mycoboco/wcwidth.js.git"
  },
  "bugs": {
    "url": "https://github.com/mycoboco/wcwidth.js/issues",
    "email": "woong.jun@gmail.com"
  },
  "main": "wcwidth.js",
  "dependencies": {
    "underscore": ">= 1.3.0"
  },
  "devDependencies": {},
  "engines": {
    "node": ">= 0.8.0"
  },
  "licenses": "MIT",
  "keywords": [
    "wide character",
    "wc",
    "wide character string",
    "wcs",
    "terminal",
    "width",
    "wcwidth",
    "wcswidth"
  ],
  "readme": "wcwidth.js: A JavaScript Porting of Markus Kuhn's wcwidth() Implementation\n==========================================================================\n\n`wcwidth.js` is a simple JavaScript porting of `wcwidth()` implemented in C\n[by Markus Kuhn](http://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c).\n\n`wcwidth()` and its string version, `wcswidth()` are defined by IEEE Std\n1002.1-2001, a.k.a. POSIX.1-2001, and return the number of columns used to\nrepresent the given wide character and string. Markus's implementation assumes\nthe wide character given to those functions to be encoded in ISO 10646, which\nis almost true for JavaScript's characters.\n\nFor convenience, `wcwidth.js` sets the getter of the property named `wcwidth`\nfor the string type. You don't need to invoke a function to get the width of\nstrings, but inspecting the `wcwidth` property is enough. The following code\nsnippet shows how to use `wcwidth.js`:\n\n    var wcwidth = require('wcwidth')({\n        nul:         0,\n        control:     -1,\n        monkeypatch: true\n    });    // equivalent to var wcwidth = require('wcwidth')();\n\n    console.log(\"한글\".wcwidth);    // prints 4\n    console.log(\"\\0\".wcwidth);      // prints 0\n    console.log(\"\\t\".wcwidth);      // prints -1\n\nThe argument `{ nul: 0, control: -1, monkeypatch: true }` (which are the\ndefault values, in fact) tells `wcwidth.js` to return 0 for the NUL character\nand -1 for non-printable control characters. Setting a negative value to `nul`\nor `control` makes the `wcwidth` property set to -1 for any string that\ncontains NUL or control characters respectively. If you plan to replace each\ncontrol character with, say, `???` when printing, you can 'require'\n`wcwidth.js` as follows:\n\n    var wcwidth = require('wcwidth')({\n        control: 3\n    });    // leaving nul as 0\n\n    console.log(\"\\t\".wcwidth);    // prints 3\n    console.log(\"\\0\".wcwidth);    // prints 0\n\nThe last option `monkeypatch` allows `wcwidth.js` to monkey-patch\n`String.prototype` to provide the getter `wcwidth`. Even if it is convenient to\nhave a getter that looks like the native one, it is sometimes unwanted as\nadding a getter into `String.prototype` may break node.js's module system; you\nare not guaranteed to have the version your code `require`s through the getter\nif other modules you're using also depend on other versions of `wcwidth.js`\n(thanks to [timoxley](https://github.com/timoxley) for the information). By\nsetting `monkeypatch` to `false`, `wcwidth.js` touches no global object and\nprovides no getter but a callable method explained below.\n\n`wcwidth.js` also provides a method. Since JavaScript has no character type,\nit is meaningless to have two versions while POSIX does for C. The method also\naccepts a code value that can be obtained by the `charCodeAt()` method.\n\n    console.log(wcwidth('한'));                 // prints 2\n    console.log(wcwidth('글'.charCodeAt(0));    // prints 2\n    console.log(wcwidth('한글'));               // prints 4\n\n`INSTALL.md` explains how to build and install the library. For the copyright\nissues, see the accompanying `LICENSE.md` file.\n\nIf you have a question or suggestion, do not hesitate to contact me via email\n(woong.jun at gmail.com) or web (http://code.woong.org/).\n",
  "readmeFilename": "README.md",
  "_id": "wcwidth.js@0.0.4",
  "_from": "wcwidth.js@~0.0.4"
}
