{
  "name": "toml",
  "version": "2.0.6",
  "description": "TOML parser for Node.js",
  "main": "index.js",
  "scripts": {
    "test": "jshint lib/compiler.js && nodeunit test/test_*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/BinaryMuse/toml-node.git"
  },
  "keywords": [
    "toml",
    "parser"
  ],
  "author": {
    "name": "Brandon Tilley",
    "email": "brandon@brandontilley.com"
  },
  "license": "MIT",
  "devDependencies": {
    "jshint": "*",
    "nodeunit": "~0.8.6",
    "pegjs": "~0.8.0"
  },
  "readme": "TOML Parser for Node.js\n=======================\n\n[![Build Status](https://travis-ci.org/BinaryMuse/toml-node.png?branch=master)](https://travis-ci.org/BinaryMuse/toml-node)\n\n[![NPM](https://nodei.co/npm/toml.png?downloads=true)](https://nodei.co/npm/toml/)\n\nIf you haven't heard of TOML, well you're just missing out. [Go check it out now.](https://github.com/mojombo/toml) Back? Good.\n\nTOML Spec Support\n-----------------\n\ntoml-node supports version 0.2.0 the TOML spec as specified by [mojombo/toml@v0.2.0](https://github.com/mojombo/toml/blob/master/versions/toml-v0.2.0.md)\n\nInstallation\n------------\n\ntoml-node is available via npm.\n\n    npm install toml\n\nUsage\n-----\n\n### Standalone\n\nSay you have some awesome TOML in a variable called `someTomlString`. Maybe it came from the web; maybe it came from a file; wherever it came from, it came asynchronously! Let's turn that sucker into a JavaScript object.\n\n```javascript\nvar toml = require('toml');\nvar data = toml.parse(someTomlString);\nconsole.dir(data);\n```\n\n`toml.parse` throws an exception in the case of a parsing error; such exceptions have a `line` and `column` property on them to help identify the offending text.\n\n```javascript\ntry {\n  toml.parse(someCrazyKnuckleHeadedTrblToml);\n} catch (e) {\n  console.error(\"Parsing error on line \" + e.line + \", column \" + e.column +\n    \": \" + e.message);\n}\n```\n\n### Streaming\n\nAs of toml-node version 1.0, the streaming interface has been removed. Instead, use a module like [concat-stream](https://npmjs.org/package/concat-stream):\n\n```javascript\nvar toml = require('toml');\nvar concat = require('concat-stream');\nvar fs = require('fs');\n\nfs.createReadStream('tomlFile.toml', 'utf8').pipe(concat(function(data) {\n  var parsed = toml.parse(data);\n}));\n```\n\nThanks [@ForbesLindesay](https://github.com/ForbesLindesay) for the suggestion.\n\n### Requiring with Node.js\n\nYou can use the [toml-require package](https://github.com/BinaryMuse/toml-require) to `require()` your `.toml` files with Node.js\n\nLive Demo\n---------\n\nYou can experiment with TOML online at http://binarymuse.github.io/toml-node/, which uses the latest version of this library.\n\nBuilding & Testing\n------------------\n\ntoml-node uses [the PEG.js parser generator](http://pegjs.majda.cz/).\n\n    npm install\n    ./generate.sh\n    npm test\n\nAny changes to `src/toml.peg` requires a regeneration of the parser with `./generate.sh`.\n\ntoml-node is tested on Travis CI and is tested against:\n\n * Node 0.6\n * Node 0.8\n * Node 0.10\n * Node 0.11\n\nLicense\n-------\n\ntoml-node is licensed under the MIT license agreement. See the LICENSE file for more information.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/BinaryMuse/toml-node/issues"
  },
  "homepage": "https://github.com/BinaryMuse/toml-node",
  "_id": "toml@2.0.6",
  "_from": "toml@^2.0.6"
}
