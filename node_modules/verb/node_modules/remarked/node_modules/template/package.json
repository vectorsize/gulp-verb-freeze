{
  "name": "template",
  "description": "Process nested Lo-dash templates recursively. Usually templates that are nested in multiple files will not be evaluated.",
  "version": "0.2.1",
  "homepage": "https://github.com/jonschlinkert/template",
  "author": {
    "name": "Jon Schlinkert",
    "url": "https://github.com/jonschlinkert"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/jonschlinkert/template.git"
  },
  "bugs": {
    "url": "https://github.com/jonschlinkert/template/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jonschlinkert/template/blob/master/LICENSE-MIT"
    }
  ],
  "main": "index.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "delims": "^0.1.4",
    "lodash": "^2.4.1"
  },
  "devDependencies": {
    "chai": "~1.9.1",
    "mocha": "*",
    "underscore.string": "^2.3.3",
    "verb": "~0.2.6"
  },
  "keywords": [
    "lodash",
    "process",
    "recurse",
    "recursively",
    "template",
    "templates",
    "underscore"
  ],
  "scripts": {
    "test": "mocha -R spec"
  },
  "readme": "# template [![NPM version](https://badge.fury.io/js/template.png)](http://badge.fury.io/js/template)\n\n> Process nested Lo-dash templates recursively. Usually templates that are nested in multiple files will not be evaluated.\n\n## Install\nInstall with [npm](npmjs.org):\n\n```bash\nnpm i template --save-dev\n```\n\n## Usage\n\n### template()\n\n\n```js\ntemplate(text, data, [options])\n```\n\n**Example**:\n\n```js\nvar template = require('template');\n\ntemplate('Name: <%= name %>', {name: 'Jon'});\n```\n\nRenders to:\n\n```\nName: Jon\n```\n\n### template.read()\n\nTo read a file from the file system before processing, use `template.read`:\n\n```js\ntemplate.read('file.md', data, options);\n```\n\n## Options\n\nTemplate supports all [Lo-Dash template](http://lodash.com/docs#template) options, as well as a few extras.\n\n### custom delimiters\n\nAll of the options from the [delims](https://github.com/jonschlinkert/delims) library may be passed to the options object.\n\nFor example, this:\n\n```js\ntemplate('Hi, my name is template', {name: 'Jon Schlinkert'}, {delims: ['']});\n```\n\nResults in:\n\n```\nHi, my name is Jon Schlinkert\n```\n\n## Valid syntax\n\nAny of the following expressions may be used in templates:\n\n```js\n// Strings\n\"foo\"\n\n// Property strings\nfoo\nfoo.bar\nfoo.bar.baz\n\n// Method calls, passed as properties on the data object\none()\ntwo.three()\n\n// Lo-Dash Mixins\n_.foo()\n_.foo(bar)\n_.foo(\"baz\")\n```\n\n### Tip\n\n**[underscore.string][str]**\n\nMixin the methods from [underscore.string][str] so they are available on the `_.str` object.\n\n```js\n_.str = require('underscore.string');\n_.mixin(_.str.exports());\n```\n\n## Author\n\n**Jon Schlinkert**\n \n+ [github/jonschlinkert](https://github.com/jonschlinkert)\n+ [twitter/jonschlinkert](http://twitter.com/jonschlinkert) \n\n## License\nCopyright (c) 2014 Jon Schlinkert, contributors.  \nReleased under the MIT license\n\n***\n\n_This file was generated by [verb-cli](https://github.com/assemble/verb-cli) on June 28, 2014._\n\n\n[str]: https://github.com/epeli/underscore.string\n[str-docs]: https://github.com/epeli/underscore.string#nodejs-installation",
  "readmeFilename": "README.md",
  "_id": "template@0.2.1",
  "_from": "template@^0.2.1"
}
